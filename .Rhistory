)
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1))
type_meta_heatmap <- ggplot(
replicate_metadata(),
aes(x = sample, y = "type", fill = type)
) +
geom_tile() +
scale_fill_manual(values = habitat_colour) +
facet_grid(cols = vars(src)) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
strip.background = element_blank(),
strip.text = element_blank()
)
salinity_meta_heatmap <- ggplot(
replicate_metadata(),
aes(x = sample, y = "salinity", fill = salinity)
) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(cols = vars(src)) +
theme_bw() +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
strip.background = element_blank(),
strip.text = element_blank()
)
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1), guides = 'collect')
type_meta_heatmap <- ggplot(
replicate_metadata(),
aes(x = sample, y = "type", fill = type)
) +
geom_tile() +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_manual(values = habitat_colour) +
facet_grid(cols = vars(src)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
strip.background = element_blank(),
strip.text = element_blank()
)
salinity_meta_heatmap <- ggplot(
replicate_metadata(),
aes(x = sample, y = "salinity", fill = salinity)
) +
geom_tile() +
scale_x_discrete(expand = c(0, 0)) +
scale_fill_viridis_c() +
facet_grid(cols = vars(src)) +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
strip.background = element_blank(),
strip.text = element_blank()
)
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1), guides = 'collect')
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1), guides = 'collect') &
theme(legend.position = "bottom")
present_threshold <- 2 # 0 if less than present_threshold
distance_matrix <- lapply(
distance_method, \(method) {
binary <- ifelse(method == "jaccard", TRUE, FALSE)
lapply(COUNTS, \(x) {
if (binary)
x[x < present_threshold] <- 0
vegdist(t(x), method = method, binary = binary)
})
}
)
distance_matrix <- lapply(
distance_method, \(method) {
binary <- ifelse(method == "jaccard", TRUE, FALSE)
lapply(COUNTS, \(x) {
if (binary)
x[x < present_threshold] <- 0
x <- split_matrix(x, rows = get_GHPL(), remove_zero_rowsum = TRUE)
vegdist(t(x), method = method, binary = binary)
})
}
)
nmds <- lapply_at_depth(
distance_matrix, 2,
\(x) metaMDS(x, try = 999, trymax = 1999, autotransform = FALSE)
)
nmds_scores <- lapply_at_depth(nmds, 2, \(x) scores(x, tidy = TRUE)) %>%
unlist(recursive = FALSE) %>%
rbindlist(idcol = "data_type") %>%
merge(., METADATA[, .(sample, type, salinity)],
by.x = "label", by.y = "sample")
nmds_scores[
, c("dist_type", "source_type") := tstrsplit(data_type, ".", fixed = TRUE)
]
nmds_plot <- ggplot(
nmds_scores,
aes(x = NMDS1, y = NMDS2, colour = salinity, shape = type)
) +
geom_point() +
scale_colour_viridis_c() +
scale_shape_manual(
values = habitat_shape,
labels = stringr::str_to_title
) +
labs(
colour = "Salinity (ppt)",
shape = "Habitat substrate"
) +
facet_wrap(
dist_type ~ source_type,
scales = "free"
) +
theme_bw() +
theme(
panel.grid = element_blank(),
legend.position = "right",
aspect.ratio = 1,
axis.title = element_blank()
)
nmds_plot
procrustes_test <- lapply(
nmds, \(ord) {
overlap_samples <- Reduce(intersect, lapply(ord, \(i) rownames(i$points)))
scr <- lapply(ord, \(i) split_matrix(scores(i), rows = overlap_samples))
protest(scr$WGS, scr$WTS)
}
)
procrustes_scores <- lapply(
procrustes_test, \(x) {
axes <- get_procrustes_axes(x)
data <- as.data.table(cbind(x$X, x$Yrot), keep.rownames = "sample")
names(data)[-1] <- c("x_gene", "y_gene", "x_transcript", "y_transcript")
data <- merge(data, METADATA[, .(sample, type, salinity)],
by = "sample", all.x = TRUE)
list("axes" = axes, "coordinates" = data)
}
)
procrustes_plot <- map2(
procrustes_scores, names(procrustes_scores),
\(x, nm) {
line_colour <- "grey70"
segment_colour <- "navy"
ggplot() +
geom_hline(yintercept = 0, linetype = 2, colour = line_colour) +
geom_vline(xintercept = 0, linetype = 2, colour = line_colour) +
geom_abline(
data = x$axes,
mapping = aes(intercept = intercept, slope = slope),
colour = line_colour
) +
geom_segment(
data = x$coordinates,
mapping = aes(x = x_gene,
y = y_gene,
xend = x_transcript,
yend = y_transcript),
colour = segment_colour,
arrow = arrow(
angle = 30,
length = unit(3, "points")
)
) +
geom_point(
data = x$coordinates,
mapping = aes(x = x_gene,
y = y_gene,
colour = salinity,
shape = type)
) +
labs(
title = stringr::str_to_title(nm),
colour = "Salinity (ppt)",
shape = "Habitat substrate"
) +
scale_colour_viridis_c() +
scale_shape_manual(
values = habitat_shape,
labels = stringr::str_to_title
) +
theme_bw() +
theme(
aspect.ratio = 1,
panel.grid = element_blank(),
axis.title = element_blank()
)
}
)
procrustes_plot
lapply(procrustes_test, resid)
par(mfrow = c(1, 2))
walk(procrustes_test, plot, type = 2)
rlang::last_trace()
walk(procrustes_test, plot, kind = 2)
bin2contig
bin2contig()
get_bin2contig()
distance_matrix <- lapply(
distance_method, \(method) {
binary <- ifelse(method == "jaccard", TRUE, FALSE)
lapply(COUNTS, \(x) {
if (binary)
x[x < present_threshold] <- 0
else
x <- calc_TPM(x, g)
x <- split_matrix(x, rows = get_GHPL(), remove_zero_rowsum = TRUE)
vegdist(t(x), method = method, binary = binary)
})
}
)
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1), guides = 'collect') &
theme(legend.position = "bottom")
lapply_at_depth(distance_matrix, 2, \(i) {
sample_data <- METADATA[sample %in% labels(i)]
adonis2(i ~ type + salinity, sample_data, permutations = 999, by = "margin")
})
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums, simplify = TRUE)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30])
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(log(WTS) ~ log(WGS[1:30]))
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(log(WTS) ~ log(WGS[1:30]), type = "text")
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(log(WTS) ~ log(WGS[1:30]), col = viridis(30)[order(METADATA$sample[1:30])])
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(log(WTS) ~ log(WGS[1:30]), col = viridis::viridis(30)[order(METADATA$sample[1:30])])
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = viridis::viridis(30)[order(METADATA$sample[1:30])],
pch = as.numeric(as.factor(METADATA$type[1:30])))
order(METADATA$sample[1:30])
viridis::viridis(30)[order(METADATA$sample[1:30])]
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = c(
viridis(9),
viridis(21)
),
pch = as.numeric(as.factor(METADATA$type[1:30])))
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = c(
viridis::viridis(9),
viridis::viridis(21)
),
pch = as.numeric(as.factor(METADATA$type[1:30])))
sapply(binary_ghpl, colSums)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = c(
viridis::viridis(9),
viridis::viridis(21)
),
pch = as.numeric(as.factor(METADATA$type[1:30])) + 10)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = c(
viridis::viridis(9),
viridis::viridis(21)
),
pch = as.numeric(as.factor(METADATA$type[1:30])) + 15)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, colSums) %$%
plot(WTS ~ WGS[1:30],
col = c(
viridis::viridis(9),
viridis::viridis(21)
),
pch = as.numeric(as.factor(METADATA$type[1:30])) + 15)
mapply(colSums, binary_ghpl)
mapply(colSums, binary_ghpl, SIMPLIFY = TRUE)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
sapply(binary_ghpl, \(i) colSums(i[, 1:30]))
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30]))
lm_richness <- lm(WTS ~ WGS, richness)
lm_richness <- lm(WTS ~ WGS, as.data.frame(richness))
summary(lm_richness)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30])) %>%
as.data.table() %>%
merge(., METADATA[, .(sample, type, salinity)], all.x = TRUE, by = "sample")
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30])) %>%
as.data.table(keep.rownames = "sample") %>%
merge(., METADATA[, .(sample, type, salinity)], all.x = TRUE, by = "sample")
lm_richness <- lm(WTS ~ WGS + salinity + type, richness)
summary(lm_richness)
?car::Anova
car::Anova(lm_richness, type = 2)
lm_richness <- lm(WTS ~ WGS + salinity * type, richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
cor.test(WTS ~ WGS, richness)
cor.test(~ WTS + WGS, richness)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30])) %>%
as.data.table(keep.rownames = "sample") %>%
merge(., METADATA[, .(sample, type, salinity)], all.x = TRUE, by = "sample") %>%
.[, ratio := WTS / WGS]
lm_richness <- lm(I(WTS/WGS) ~ salinity * type, richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30])) %>%
as.data.table(keep.rownames = "sample") %>%
merge(., METADATA[, .(sample, type, salinity)], all.x = TRUE, by = "sample")
lm_richness <- lm(I(WTS/WGS) ~ salinity * type, richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
lm_richness <- lm(I(WTS/WGS) ~ salinity + type, richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
# Hence, although freshwater taxa appear able to use a diverse range of
# carbohydrate substrates (on average ???? +/- SD genes per MAG, Fig ????),
# results indicate a preference for particular substrates over others, and
# therefore uneven transcription of associated genes.
richness <- sapply(binary_ghpl, \(i) colSums(i[, 1:30])) %>%
as.data.table(keep.rownames = "sample") %>%
merge(., METADATA[, .(sample, type, salinity)], all.x = TRUE, by = "sample") %>%
.[, ratio := WTS/WGS]
lm_richness <- lm(ratio ~ salinity + type, richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
plot(ratio ~ type, richness)
boxplot(ratio ~ type, richness)
plot(ratio ~ salinity, richness, pch = as.numeric(as.factor(richness$type)))
plot(log(ratio) ~ salinity, richness, pch = as.numeric(as.factor(richness$type)))
lm_richness <- glm(ratio ~ salinity + type, family = "Gamma", richness)
summary(lm_richness)
car::Anova(lm_richness, type = 2)
View(richness)
plot(ratio ~ salinity, richness, pch = richness$type)
caz_per_mag <- lapply(binary_ghpl, \(i) {
as.data.table(i, keep.rownames = "node") %>%
merge(., ANNOTATION[, .(node, bin)], all.x = TRUE, by = "node") %>%
.[, lapply(.SD, sum), by = "bin", .SDcols = patterns("Sed|Filt")]
})
View(caz_per_mag)
View(caz_per_mag[["WGS"]])
sapply(caz_per_mag, \(i) colMeans(i[i > 0])[1:30])
sapply(caz_per_mag, \(i) colMeans(ifelse(i == 0, NA, i), na.rm = T)[1:30])
sapply(caz_per_mag, \(i) colMeans(i)[1:30])
caz_per_mag <- lapply(binary_ghpl, \(i) {
as.data.table(i, keep.rownames = "node") %>%
merge(., ANNOTATION[, .(node, bin)], all.x = TRUE, by = "node") %>%
.[, lapply(.SD, sum), by = "bin", .SDcols = patterns("Sed|Filt")] %>%
as.matrix(rownames = "bin")
})
sapply(caz_per_mag, \(i) colMeans(ifelse(i > 0, i, NA), na.rm = T)[1:30])
sapply(caz_per_mag, \(i) colMedians(ifelse(i > 0, i, NA), na.rm = T)[1:30])
sapply(caz_per_mag, \(i) colVars(ifelse(i > 0, i, NA), na.rm = T, std = T)[1:30])
sapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
cbind(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30]
)
})
lapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
cbind(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30]
)
})
lapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
cbind(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30],
"n" = colSums(!is.na(i))
)
})
lapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
cbind(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30],
"n" = colSums(i > 0, na.rm = T)
)
})
ghpl_composition_heatmap / type_meta_heatmap / salinity_meta_heatmap +
plot_layout(nrow = 3, heights = c(20, 1, 1), guides = 'collect') &
theme(legend.position = "bottom")
lapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
data.table(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30],
"n" = colSums(i > 0, na.rm = T)
) %>%
.[, covar := stdev/average]
})
data.table(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30],
"n" = colSums(i > 0, na.rm = T)[1:30]
) %>%
.[, covar := stdev/average]
lapply(caz_per_mag, \(i) {
i <- ifelse(i > 0, i, NA)
data.table(
"average" = colMeans(i, na.rm = T)[1:30],
"stdev" = colVars(i, na.rm = T, std = T)[1:30],
"n" = colSums(i > 0, na.rm = T)[1:30]
) %>%
.[, covar := stdev/average]
})
